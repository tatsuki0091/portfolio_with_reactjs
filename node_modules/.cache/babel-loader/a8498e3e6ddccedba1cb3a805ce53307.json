{"ast":null,"code":"var _jsxFileName = \"/Users/Tatsuki/projects/react/portfolio/src/features/mail/Email.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; // import { fetchAsyncSendEmail } from \"./emailSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncSendEmail, sendEmail } from './emailSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Email() {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"third-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"third-content-img col-12 col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"content  mx-auto\",\n              id: \"contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialErrors: {\n                email: \"required\",\n                message: \"required\"\n              },\n              initialValues: {\n                email: \"\",\n                subject: \"\",\n                message: \"\"\n              },\n              onSubmit: async values => {\n                await dispatch(fetchAsyncSendEmail());\n              },\n              validationSchema: Yup.object().shape({\n                email: Yup.string().email(\"email format is wrong\").required(\"email is must\"),\n                message: Yup.string().required(\"message is must\").max(2000)\n              }),\n              render: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                // handler for onBlur event of form elements\n                values,\n                touched,\n                errors,\n                isValid\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control col-12 mt-1\",\n                      placeholder: \"Email Address\",\n                      type: \"text\",\n                      name: \"email\",\n                      onBlur: handleBlur,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 27\n                    }, this), touched.email && errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"error-message\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control col-12 mt-1\",\n                      placeholder: \"Subject\",\n                      type: \"text\",\n                      name: \"subject\",\n                      onBlur: handleBlur,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                      className: \"form-control mt-1\",\n                      rows: \"10\",\n                      placeholder: \"Message\",\n                      name: \"message\",\n                      onBlur: handleBlur,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 27\n                    }, this), touched.message && errors.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"error-message\",\n                      children: errors.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"col-12 contact-send-button\",\n                    type: \"submit\",\n                    value: \"Send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Email, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/Tatsuki/projects/react/portfolio/src/features/mail/Email.jsx"],"names":["React","Container","Formik","Yup","useDispatch","useSelector","fetchAsyncSendEmail","sendEmail","Email","dispatch","email","message","subject","values","object","shape","string","required","max","handleSubmit","handleChange","handleBlur","touched","errors","isValid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n// import { fetchAsyncSendEmail } from \"./emailSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchAsyncSendEmail, sendEmail } from './emailSlice'\n\n\nexport function Email() {\n  const dispatch = useDispatch();\n\n  return (\n      <>\n      <Container fluid className=\"third-block\">\n          <div className=\"row\">\n            <div className=\"third-content-img col-12 col-lg-12\">\n              <div className=\"col-12\">\n                <h1 className=\"content  mx-auto\" id=\"contact\">Contact</h1>\n                <Formik\n                  initialErrors={{ email: \"required\", message: \"required\" }}\n                  initialValues={{ email: \"\", subject: \"\", message: \"\" }}\n                  onSubmit={async (values) => {\n                    await dispatch(fetchAsyncSendEmail());\n              \n                  }}\n                  validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                      .email(\"email format is wrong\")\n                      .required(\"email is must\"),\n                    message: Yup.string()\n                      .required(\"message is must\")\n                      .max(2000)\n                  })}\n                  render={({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur, // handler for onBlur event of form elements\n                    values,\n                    touched,\n                    errors,\n                    isValid,\n                  }) => (\n                    <>\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"mb-3\">\n                          <input\n                            className=\"form-control col-12 mt-1\"\n                            placeholder=\"Email Address\"\n                            type=\"text\"\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                          />\n                          {touched.email && errors.email ? (\n                            <div className=\"error-message\">{errors.email}</div>\n                          ) : null}\n                        </div>           \n                        <div className=\"mb-3\">\n                          <input\n                            className=\"form-control col-12 mt-1\"\n                            placeholder=\"Subject\"\n                            type=\"text\"\n                            name=\"subject\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                          />\n                        </div>\n                        <div>\n                          <textarea\n                            className=\"form-control mt-1\"\n                            rows=\"10\"\n                            placeholder=\"Message\"\n                            name=\"message\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                          />\n                          {touched.message && errors.message ? (\n                            <div className=\"error-message\">{errors.message}</div>\n                          ) : null}\n                        </div>\n                        <br />\n                        <input\n                          className=\"col-12 contact-send-button\"\n                          type=\"submit\"\n                          value=\"Send\"\n                        ></input>\n                      </form>\n                    </>\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n        </Container>\n      </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}