{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../app/store\";\nconst apiURL = process.env.SEND_EMAIL; // メール送信処理\n\nexport const fetchAsyncSendEmail = createAsyncThunk(\"send/email\", async values => {\n  console.log(apiURL);\n  console.log(values); // const res = await axios.post(`${apiURL}`, values, {\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  // });\n  // return res.data;\n});\nconst emailSlice = createSlice({\n  name: \"email\",\n  initialState: {},\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true;\n    }\n\n  },\n  // extraReducer追加\n  extraReducers: builder => {\n    builder.addCase(fetchAsyncSendEmail.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n  }\n}); // export const { fetchAsyncSendEmail } = emailSlice.actions;\n// Reducerをエクスポートする\n\nexport default emailSlice.reducer;","map":{"version":3,"sources":["/Users/Tatsuki/projects/react/portfolio/src/features/email/emailSlice.js"],"names":["createSlice","createAsyncThunk","axios","RootState","apiURL","process","env","SEND_EMAIL","fetchAsyncSendEmail","values","console","log","emailSlice","name","initialState","reducers","fetchCredStart","state","isLoadingAuth","extraReducers","builder","addCase","fulfilled","action","myprofile","payload","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA3B,C,CAEA;;AACA,OAAO,MAAMC,mBAAmB,GAAGP,gBAAgB,CACjD,YADiD,EAEjD,MAAOQ,MAAP,IAAkB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACD,CAXgD,CAA5C;AAaP,MAAMG,UAAU,GAAGZ,WAAW,CAAC;AAC7Ba,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,CAACC,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACD;;AAHO,GAHmB;AAQ7B;AACAC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,mBAAmB,CAACc,SAApC,EAA+C,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAChEN,MAAAA,KAAK,CAACO,SAAN,GAAkBD,MAAM,CAACE,OAAzB;AACD,KAFD;AAGD;AAb4B,CAAD,CAA9B,C,CAgBA;AAEA;;AACA,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../app/store\";\n\nconst apiURL = process.env.SEND_EMAIL;\n\n// メール送信処理\nexport const fetchAsyncSendEmail = createAsyncThunk(\n  \"send/email\",\n  async (values) => {\n    console.log(apiURL);\n    console.log(values);\n    // const res = await axios.post(`${apiURL}`, values, {\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n    // return res.data;\n  }\n);\nconst emailSlice = createSlice({\n  name: \"email\",\n  initialState: {},\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true;\n    },\n  },\n  // extraReducer追加\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncSendEmail.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n  },\n});\n\n// export const { fetchAsyncSendEmail } = emailSlice.actions;\n\n// Reducerをエクスポートする\nexport default emailSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}